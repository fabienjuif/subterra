{"ast":null,"code":"var _jsxFileName = \"/home/fabienjuif/work/subterra/packages/ui/src/app.jsx\";\nimport React, { useState, useCallback } from 'react';\nimport { Provider } from '@myrtille/react';\nimport { createEngine, initState } from '@subterra/engine';\nimport { Prepare, Game } from './screens';\nimport './variables.css';\n\nconst App = () => {\n  const [engine, setEngine] = useState();\n  const onStart = useCallback(({\n    cards,\n    dices,\n    players\n  }) => {\n    const engine = createMockedEngine;\n    engine.dispatch({\n      type: '@cards>init',\n      payload: cards\n    });\n    engine.dispatch({\n      type: '@dices>init',\n      payload: dices\n    });\n    engine.dispatch({\n      type: '@players>init',\n      payload: players\n    });\n    setEngine(engine);\n  }, []);\n  if (!engine) return /*#__PURE__*/React.createElement(Prepare, {\n    onStart: onStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }\n  });\n  return /*#__PURE__*/React.createElement(Provider, {\n    store: engine,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Game, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;\nconst createMockedEngine = createEngine({ ...initState(),\n  // mock necessary as long as the view or explore actions are not functional.\n  grid: [{\n    id: 0,\n    type: 'start',\n    x: 0,\n    y: 0,\n    top: true,\n    right: true,\n    bottom: true,\n    left: true,\n    status: []\n  }, {\n    id: 1,\n    type: 'end',\n    x: 0,\n    y: -1,\n    bottom: true,\n    status: []\n  }, {\n    id: 2,\n    type: 'gaz',\n    x: 1,\n    y: 0,\n    top: true,\n    bottom: true,\n    left: true,\n    status: []\n  }, {\n    id: 3,\n    x: 1,\n    y: -1,\n    bottom: true,\n    status: []\n  }, {\n    id: 4,\n    type: 'water',\n    x: 1,\n    y: 1,\n    top: true,\n    left: true,\n    status: []\n  }, {\n    id: 5,\n    type: 'landslide',\n    dices: [2, 3],\n    x: 0,\n    y: 1,\n    top: true,\n    right: true,\n    status: []\n  }, {\n    id: 6,\n    x: -1,\n    y: 1,\n    top: true,\n    right: true,\n    bottom: true,\n    left: true,\n    status: []\n  }, {\n    id: 7,\n    type: 'tight',\n    x: -1,\n    y: 0,\n    top: true,\n    right: true,\n    status: []\n  }, {\n    id: 8,\n    type: 'enemy',\n    x: -1,\n    y: -1,\n    top: true,\n    right: true,\n    bottom: true,\n    left: true,\n    status: []\n  }]\n});","map":{"version":3,"sources":["/home/fabienjuif/work/subterra/packages/ui/src/app.jsx"],"names":["React","useState","useCallback","Provider","createEngine","initState","Prepare","Game","App","engine","setEngine","onStart","cards","dices","players","createMockedEngine","dispatch","type","payload","grid","id","x","y","top","right","bottom","left","status"],"mappings":"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","sourcesContent":["import React, { useState, useCallback } from 'react'\nimport { Provider } from '@myrtille/react'\nimport { createEngine, initState } from '@subterra/engine'\nimport { Prepare, Game } from './screens'\nimport './variables.css'\n\nconst App = () => {\n  const [engine, setEngine] = useState()\n\n  const onStart = useCallback(({ cards, dices, players }) => {\n    const engine = createMockedEngine\n\n    engine.dispatch({\n      type: '@cards>init',\n      payload: cards,\n    })\n    engine.dispatch({\n      type: '@dices>init',\n      payload: dices,\n    })\n    engine.dispatch({\n      type: '@players>init',\n      payload: players,\n    })\n\n    setEngine(engine)\n  }, [])\n\n  if (!engine) return <Prepare onStart={onStart} />\n\n  return (\n    <Provider store={engine}>\n      <Game />\n    </Provider>\n  )\n}\n\nexport default App\n\nconst createMockedEngine = createEngine({\n  ...initState(),\n  // mock necessary as long as the view or explore actions are not functional.\n  grid: [\n    {\n      id: 0,\n      type: 'start',\n      x: 0,\n      y: 0,\n      top: true,\n      right: true,\n      bottom: true,\n      left: true,\n      status: [],\n    },\n    { id: 1, type: 'end', x: 0, y: -1, bottom: true, status: [] },\n    {\n      id: 2,\n      type: 'gaz',\n      x: 1,\n      y: 0,\n      top: true,\n      bottom: true,\n      left: true,\n      status: [],\n    },\n    { id: 3, x: 1, y: -1, bottom: true, status: [] },\n    { id: 4, type: 'water', x: 1, y: 1, top: true, left: true, status: [] },\n    {\n      id: 5,\n      type: 'landslide',\n      dices: [2, 3],\n      x: 0,\n      y: 1,\n      top: true,\n      right: true,\n      status: [],\n    },\n    {\n      id: 6,\n      x: -1,\n      y: 1,\n      top: true,\n      right: true,\n      bottom: true,\n      left: true,\n      status: [],\n    },\n    { id: 7, type: 'tight', x: -1, y: 0, top: true, right: true, status: [] },\n    {\n      id: 8,\n      type: 'enemy',\n      x: -1,\n      y: -1,\n      top: true,\n      right: true,\n      bottom: true,\n      left: true,\n      status: [],\n    },\n  ],\n})\n"]},"metadata":{},"sourceType":"module"}