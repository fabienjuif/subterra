{"ast":null,"code":"export const init = (store, action) => {\n  store.mutate(state => {\n    state.dices = action.payload;\n  });\n};\nexport const roll = (store, action) => {\n  let value;\n  store.mutate(state => {\n    value = state.dices.shift();\n  });\n  store.dispatch({\n    type: '@dices>rolled',\n    payload: { ...action.payload,\n      value\n    }\n  });\n};\nexport const checkAndDispatch = (store, action) => {\n  let {\n    value\n  } = action.payload;\n\n  if (action.payload.min === undefined) {\n    store.dispatch({ ...action.payload.nextAction,\n      payload: { ...action.payload.nextAction.payload,\n        rolled: value\n      }\n    });\n    return;\n  }\n\n  const prevState = store.getState();\n  const player = prevState.players.find(({\n    name\n  }) => action.payload.playerName);\n\n  if (player && player.skills.some(({\n    type\n  }) => type === 'experienced')) {\n    value += 1;\n  }\n\n  if (value < action.payload.min) {\n    if (action.payload.actionOnFail) {\n      store.dispatch(action.payload.actionOnFail);\n    }\n  } else {\n    if (action.payload.actionOnSuccess) {\n      store.dispatch(action.payload.actionOnSuccess);\n    }\n  }\n};","map":{"version":3,"sources":["/home/fabienjuif/work/subterra/packages/engine/src/dices.js"],"names":["init","store","action","mutate","state","dices","payload","roll","value","shift","dispatch","type","checkAndDispatch","min","undefined","nextAction","rolled","prevState","getState","player","players","find","name","playerName","skills","some","actionOnFail","actionOnSuccess"],"mappings":"AAAA,OAAO,MAAMA,IAAI,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrCD,EAAAA,KAAK,CAACE,MAAN,CAAcC,KAAD,IAAW;AACtBA,IAAAA,KAAK,CAACC,KAAN,GAAcH,MAAM,CAACI,OAArB;AACD,GAFD;AAGD,CAJM;AAMP,OAAO,MAAMC,IAAI,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIM,KAAJ;AACAP,EAAAA,KAAK,CAACE,MAAN,CAAcC,KAAD,IAAW;AACtBI,IAAAA,KAAK,GAAGJ,KAAK,CAACC,KAAN,CAAYI,KAAZ,EAAR;AACD,GAFD;AAIAR,EAAAA,KAAK,CAACS,QAAN,CAAe;AACbC,IAAAA,IAAI,EAAE,eADO;AAEbL,IAAAA,OAAO,EAAE,EACP,GAAGJ,MAAM,CAACI,OADH;AAEPE,MAAAA;AAFO;AAFI,GAAf;AAOD,CAbM;AAeP,OAAO,MAAMI,gBAAgB,GAAG,CAACX,KAAD,EAAQC,MAAR,KAAmB;AACjD,MAAI;AAAEM,IAAAA;AAAF,MAAYN,MAAM,CAACI,OAAvB;;AACA,MAAIJ,MAAM,CAACI,OAAP,CAAeO,GAAf,KAAuBC,SAA3B,EAAsC;AACpCb,IAAAA,KAAK,CAACS,QAAN,CAAe,EACb,GAAGR,MAAM,CAACI,OAAP,CAAeS,UADL;AAEbT,MAAAA,OAAO,EAAE,EACP,GAAGJ,MAAM,CAACI,OAAP,CAAeS,UAAf,CAA0BT,OADtB;AAEPU,QAAAA,MAAM,EAAER;AAFD;AAFI,KAAf;AAOA;AACD;;AAED,QAAMS,SAAS,GAAGhB,KAAK,CAACiB,QAAN,EAAlB;AACA,QAAMC,MAAM,GAAGF,SAAS,CAACG,OAAV,CAAkBC,IAAlB,CAAuB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAcpB,MAAM,CAACI,OAAP,CAAeiB,UAApD,CAAf;;AACA,MAAIJ,MAAM,IAAIA,MAAM,CAACK,MAAP,CAAcC,IAAd,CAAmB,CAAC;AAAEd,IAAAA;AAAF,GAAD,KAAcA,IAAI,KAAK,aAA1C,CAAd,EAAwE;AACtEH,IAAAA,KAAK,IAAI,CAAT;AACD;;AAED,MAAIA,KAAK,GAAGN,MAAM,CAACI,OAAP,CAAeO,GAA3B,EAAgC;AAC9B,QAAIX,MAAM,CAACI,OAAP,CAAeoB,YAAnB,EAAiC;AAC/BzB,MAAAA,KAAK,CAACS,QAAN,CAAeR,MAAM,CAACI,OAAP,CAAeoB,YAA9B;AACD;AACF,GAJD,MAIO;AACL,QAAIxB,MAAM,CAACI,OAAP,CAAeqB,eAAnB,EAAoC;AAClC1B,MAAAA,KAAK,CAACS,QAAN,CAAeR,MAAM,CAACI,OAAP,CAAeqB,eAA9B;AACD;AACF;AACF,CA5BM","sourcesContent":["export const init = (store, action) => {\n  store.mutate((state) => {\n    state.dices = action.payload\n  })\n}\n\nexport const roll = (store, action) => {\n  let value\n  store.mutate((state) => {\n    value = state.dices.shift()\n  })\n\n  store.dispatch({\n    type: '@dices>rolled',\n    payload: {\n      ...action.payload,\n      value,\n    },\n  })\n}\n\nexport const checkAndDispatch = (store, action) => {\n  let { value } = action.payload\n  if (action.payload.min === undefined) {\n    store.dispatch({\n      ...action.payload.nextAction,\n      payload: {\n        ...action.payload.nextAction.payload,\n        rolled: value,\n      },\n    })\n    return\n  }\n\n  const prevState = store.getState()\n  const player = prevState.players.find(({ name }) => action.payload.playerName)\n  if (player && player.skills.some(({ type }) => type === 'experienced')) {\n    value += 1\n  }\n\n  if (value < action.payload.min) {\n    if (action.payload.actionOnFail) {\n      store.dispatch(action.payload.actionOnFail)\n    }\n  } else {\n    if (action.payload.actionOnSuccess) {\n      store.dispatch(action.payload.actionOnSuccess)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}